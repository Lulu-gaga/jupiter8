#!/usr/bin/env python
# Standard imports
import os
import logging
import argparse
import traceback

# External dependencies
from pymongo import MongoClient

# Local imports
from mstar2jpeg import convert_image_target
from mstar2jpeg import convert_image_clutter

FILE_PREFIX = 'HB0'
VALID_TARGETS = ['BMP2', 'BTR70', 'T72']

DATABASE = 'mstar'
COLLECTION = 'targets'

log = logging.getLogger(__name__)

def find_images(directory):
    documents = []
    num_files = 0
    num_processed = 1
    for dirpath, dirnames, filenames in os.walk(directory):
        basedir = os.path.basename(dirpath)
        if basedir.endswith('_DEG'):
            dep_angle = basedir # depression angle
            continue
        if basedir in VALID_TARGETS:
            log.debug("found target directory: %s" % dirpath)
            klass= basedir
            continue
        if basedir.startswith('SN_'):
            instance = basedir
            for f in filenames:
                if not f.startswith(FILE_PREFIX): continue
                num_files +=1
                fname = os.path.join(dirpath, f)
                try:
                    doc = convert_image_target(fname,
                                               dep_angle,
                                               klass,
                                               instance,
                                               args.no_enhance,
                                               args.quality,
                                               args.header,
                                               args.verbose)
                except:
                    log.error("failed to convert %s" % fname, exc_info=True)
                    continue
                else:
                    num_processed +=1
                    documents.append(doc)
        log.debug("Converted %d of %d files" % (num_processed, num_files))
    return documents


def get_parser():
    usage = "Command line script to convert a directory of MSTAR image files to JPEG and insert metadata into DB"
    parser = argparse.ArgumentParser(usage=usage)
    parser.add_argument('indir', type=str, help="full path to MSTAR files to convert")
    parser.add_argument('-n', dest='no_enhance', action='store_false',
                        help="do NOT contrast enhance image")
    parser.add_argument('-q', dest='quality', type=int, default=75,
                        help="compression quality (5-95)")
    parser.add_argument('--header', dest='header', action='store_true', 
                        help="dump Phoenix header file")
    parser.add_argument('-v', dest='verbose', action='store_true')
    return parser

def main(args):
    client = MongoClient()
    db = client[DATABASE]
    coll = db[COLLECTION]
    documents = find_images(args.indir)
    for doc in documents:
        coll.insert(doc)
    return

if __name__ == '__main__':
    parser = get_parser()
    args = parser.parse_args()
    logging.basicConfig(level=10)
    try:
        main(args)
    except KeyboardInterrupt:
        print("Exiting due to Keyboard Interrupt")
        exit(0)
    except Exception as err:
        print("Exiting with error: %s" % err)
        traceback.format_exc()
        exit(1)
    else:
        exit(0)
