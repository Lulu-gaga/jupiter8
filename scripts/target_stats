#!/usr/bin/env python
# Standard imports
import os
import sys
import logging

# External dependencies
import pymongo
import pandas as pd

DEFAULT_DATABASE = 'mstar'
DEFAULT_TARGETS_COLLECTION = 'targets'
TRAIN_DEP_ANGLE = '17_DEG'
TEST_DEP_ANGLE = '15_DEG'

client = pymongo.MongoClient()
db = client[DEFAULT_DATABASE]

log = logging.getLogger(__name__)


def load_targets():
    col = db[DEFAULT_TARGETS_COLLECTION]
    cursor = col.find()
    df = pd.DataFrame(list(cursor))
    return df

def main():
    df = load_targets()

    # Train Samples
    train = df[df.depression_angle == TRAIN_DEP_ANGLE]
    grouped = train.groupby('target_class')
    print("\nTraining Samples")
    print(grouped.target_class.count())

    # Synth Samples
    synths = df[df.target_instance == 'synth']
    grouped = synths.groupby('target_class')
    print("\nSynthetic Samples")
    print(grouped.target_class.count())

    # Test Sample
    test = df[df.depression_angle == TEST_DEP_ANGLE]
    grouped = test.groupby('target_class')
    print("\nTest Samples")
    print(grouped.target_class.count())

if __name__ == '__main__':
    logging.basicConfig(level=10)
    try:
        ret_code = main()
    except Exception as err:
        print(err)
        ret_code = 1
    finally:
        sys.exit(ret_code)
